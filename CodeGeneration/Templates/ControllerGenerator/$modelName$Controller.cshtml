@using System
@using System.Linq
@using CodeGeneration.Extensions
@using CodeGeneration.Models.Metadata.Template
@inherits RazorEngine.Templating.TemplateBase<TemplateModelMetadata>
@{
    var tableName = Model.TableMetadata.TableName;
    var modelNameLower = Model.ModelName.ToFirstCharLowerCase();
    var rootNamespace = Model.Namespace.Substring(0, Model.Namespace.IndexOf('.'));
    var modelsNamespace = string.Format("{0}.Models.Domain", rootNamespace);
    var primaryKey = Model.TableMetadata.Columns.FirstOrDefault(c => c.IsPrimaryKey);
    var primaryKeyName = primaryKey != null ? primaryKey.ColumnName : "@(Model.ModelNameLower)Id";
    var primaryKeyNameLower = primaryKeyName.ToFirstCharLowerCase();
}
using System;
using @modelsNamespace;
using @(rootNamespace).Repositories.Interfaces;
using Microsoft.AspNetCore.Mvc;

namespace @Model.Namespace
{
    /// <inheritdoc />
    /// <summary>
    /// Author: @RazorEngineExtensions.Author()
    /// Version: @RazorEngineExtensions.Version()
    /// Create Date: @DateTime.Now.ToString("f")
    /// Description: Auto-generated controller for the @Model.ModelName model.
    /// </summary>
    public class @(Model.ModelName)Controller : Controller
    {
        private readonly I@(Model.ModelName)Repository _@(modelNameLower)Repository;

        public @(Model.ModelName)Controller(I@(Model.ModelName)Repository @(modelNameLower)Repository)
        {
            _@(modelNameLower)Repository = @(modelNameLower)Repository;
        }

        public ActionResult Index()
        {
            return View(_@(modelNameLower)Repository.FindAll());
        }

        public ActionResult Create()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(@(Model.ModelName) @(modelNameLower))
        {
            try
            {
                _@(modelNameLower)Repository.Create(@(modelNameLower));

                return RedirectToAction(nameof(Index));
            }
            catch (Exception ex)
            {
                ViewData["error"] = ex;
                return View();
            }
        }

        public ActionResult Edit(int id)
        {
            return View(_@(modelNameLower)Repository.FindOne(id));
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(@(Model.ModelName) @(modelNameLower))
        {
            try
            {
                _@(modelNameLower)Repository.Edit(@(modelNameLower));

                return RedirectToAction(nameof(Index));
            }
            catch (Exception ex)
            {
                ViewData["error"] = ex;
                return View(_@(modelNameLower)Repository.FindOne(@(modelNameLower).@(Model.ModelName)Id));
            }
        }

        public ActionResult Delete(int id)
        {
            return View(_@(modelNameLower)Repository.FindOne(id));
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(@(Model.ModelName) @(modelNameLower))
        {
            try
            {
                _@(modelNameLower)Repository.Delete(@(modelNameLower).@(Model.ModelName)Id);

                return RedirectToAction(nameof(Index));
            }
            catch (Exception ex)
            {
                ViewData["error"] = ex;
                return View();
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteAll()
        {
            try
            {
                _@(modelNameLower)Repository.DeleteAll();

                return RedirectToAction(nameof(Index));
            }
            catch (Exception ex)
            {
                ViewData["error"] = ex;
                return View();
            }
        }
    }
}