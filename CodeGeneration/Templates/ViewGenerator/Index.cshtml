@using CodeGeneration.Extensions
@using CodeGeneration.Models.Metadata.Sql
@inherits RazorEngine.Templating.TemplateBase<CodeGeneration.Models.Template.TableMetadataTemplateModel>
@{
    var tableName = Model.TableMetadata.TableName;
    var modelNameLower = Model.ModelName.ToFirstCharLowerCase();
    var primaryKey = Model.TableMetadata.Columns.FirstOrDefault(c => c.IsPrimaryKey);
    var primaryKeyName = primaryKey != null ? primaryKey.ColumnName : "@(Model.ModelNameLower)Id";
    var primaryKeyNameLower = primaryKeyName.ToFirstCharLowerCase();
}
@@model @Raw(GetEnumerableTypeExpression(@Model.TargetNamespace, @Model.ModelName))
@@{
    ViewData["Title"] = "@Model.ModelName.ToUpperDelimited() List";
}

<div class="card shadow">
    @@Html.Partial("_MenuNavigationPartial")
    <div class="card-header">
        <div data-instance-id="pagination" data-role="pagination-controls"></div>
    </div>
    <div class="table-responsive">
        <div data-instance-id="pagination" data-role="table"></div>
    </div>
    <div class="card-footer">
        <div data-instance-id="pagination" data-role="pagination-controls"></div>
    </div>
</div>

@@section scripts {
<script type="text/javascript">
        var pagination = new Pagination({
            url: "@Raw(GetUrlExpression("Page", @Model.ModelName))",
            sortExpression: "@primaryKeyName",
            sortDirection: "asc"
        });

        pagination.updateTable();
</script>
}

@functions
{
    string GetEnumerableTypeExpression(string ns, string modelName)
    {
        return string.Format("IEnumerable<{0}.Domain.{1}>", ns, modelName);
    }

    static string GetValueExpression(ColumnMetadata columnMetadata)
    {
        return columnMetadata.ColumnName;
    }

    static string GetUrlExpression(string actionName, string modelName, string modelNameLower = "", string primaryKeyName = "")
    {
        return string.IsNullOrWhiteSpace(modelNameLower) || string.IsNullOrWhiteSpace(primaryKeyName)
            ? string.Format("@Url.Action(\"{0}\", \"{1}\")", actionName, modelName)
            : string.Format("@Url.Action(\"{0}\", \"{1}\", new {{ id = {2}.{3} }})", actionName, modelName, modelNameLower, primaryKeyName);
    }
}