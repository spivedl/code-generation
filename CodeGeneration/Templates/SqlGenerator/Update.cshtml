@using System
@using System.Linq
@using CodeGeneration.Extensions
@using CodeGeneration.Models.Metadata.Sql
@inherits RazorEngine.Templating.TemplateBase<TableMetadata>
@{
    var lines = 0;
    var primaryKeyColumn = Model.Columns.FirstOrDefault(c => c.IsPrimaryKey);
    var primaryKeyColumnName = primaryKeyColumn != null ? primaryKeyColumn.ColumnName : string.Format("{0}Id", Model.TableName);
    var hasModifiedDateColumn = Model.Columns.Exists(c => c.ColumnName.Equals("ModifiedDate"));
}
RAISERROR('Creating stored procedure [@Model.TargetSchema].[sp_update_@Model.TableName.ToLowerDelimited()]', 10, 1)

USE [@Model.SourceDatabase]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[@Model.TargetSchema].[sp_update_@Model.TableName.ToLowerDelimited()]') AND type in (N'P', N'PC'))
BEGIN
DROP PROCEDURE [@Model.TargetSchema].[sp_update_@Model.TableName.ToLowerDelimited()]
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Version:		@RazorEngineExtensions.Version()
-- Author:		@RazorEngineExtensions.Author()
-- Create date: @DateTime.Now.ToString("f")
-- Description:	Auto-generated UPDATE stored procedure for table [@Model.TargetSchema].[@Model.TableName.ToLowerDelimited()].
-- =============================================
CREATE PROCEDURE [@Model.TargetSchema].[sp_update_@Model.TableName.ToLowerDelimited()]
@foreach (var column in @Model.Columns)
{
    if (column.IsReadOnly) { continue; }
    if (lines > 0)
    {
    @:, @column.GetParameterString()
    }
    else
    {
    @:@column.GetParameterString()
    }

    lines++;
}
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

    UPDATE [@Model.SourceSchema].[@Model.TableName]
@{ lines = 0; }
    @foreach (var column in @Model.Columns)
    {
        if (column.IsPrimaryKey || column.IsReadOnly) { continue; }
        if (@Model.Columns.Count > 2 && column.OrdinalPosition > 2)
        {
        @:, [@column.ColumnName] = @@@column.ColumnName
        }
        else
        {
    @:SET [@column.ColumnName] = @@@column.ColumnName
        }

        lines++;
    }
    @if (hasModifiedDateColumn)
    {
    @:, [ModifiedDate] = GETDATE()
    }
    WHERE [@primaryKeyColumnName] = @@@primaryKeyColumnName

END
GO

-------------------------------------------------------------------------------------------------------------------------------