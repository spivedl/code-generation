@using System
@using CodeGeneration.Extensions
@using CodeGeneration.Models.Metadata.Sql
@inherits RazorEngine.Templating.TemplateBase<TableMetadata>
@{
    var lines = 0;
}
RAISERROR('Creating stored procedure [@Model.TargetSchema].[sp_insert_@Model.TableName.ToLowerDelimited()]', 10, 1)

USE [@Model.TargetDatabase]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[@Model.TargetSchema].[sp_insert_@Model.TableName.ToLowerDelimited()]') AND type in (N'P', N'PC'))
BEGIN
DROP PROCEDURE [@Model.TargetSchema].[sp_insert_@Model.TableName.ToLowerDelimited()]
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Version:		@RazorEngineExtensions.Version()
-- Author:		@RazorEngineExtensions.Author()
-- Create date: @DateTime.Now.ToString("f")
-- Description:	Auto-generated INSERT stored procedure for the [@Model.TargetSchema].[@Model.TableName.ToLowerDelimited()] table.
-- =============================================
CREATE PROCEDURE [@Model.TargetSchema].[sp_insert_@Model.TableName.ToLowerDelimited()]
@foreach (var column in @Model.Columns)
{
    if (column.IsPrimaryKey || column.IsReadOnly) { continue; }
    if (lines > 0)
    {
        @:, @column.GetParameterString()
    }
    else
    {
        @:@column.GetParameterString()
    }

    lines++;
}
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

    INSERT INTO [@Model.SourceSchema].[@Model.TableName]
    (
    @{ lines = 0; }
    @foreach (var column in @Model.Columns)
    {
        if (column.IsPrimaryKey || column.IsReadOnly) { continue; }
        if (lines > 0)
        {
            @:, [@column.ColumnName]
        }
        else
        {
            @:[@column.ColumnName]
        }

        lines++;
    }
    )
    VALUES
    (
    @{ lines = 0; }
    @foreach (var column in @Model.Columns)
    {
        if (column.IsPrimaryKey || column.IsReadOnly) { continue; }
        if (lines > 0)
        {
            @:, @@@column.ColumnName
        }
        else
        {
            @:@@@column.ColumnName
        }

        lines++;
    }
    );

    SELECT CAST(SCOPE_IDENTITY() AS INT);

END
GO

-------------------------------------------------------------------------------------------------------------------------------
